//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aladdin.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Aladdin.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $Outputpath = &quot;C:\temp&quot;
        ///   
        ///#Create the table of contents for the CHM
        ///$CHMTableOfContents = @&quot;
        ///&lt;!DOCTYPE HTML PUBLIC &quot;-//IETF//DTD HTML//EN&quot;&gt;
        ///&lt;HTML&gt;
        ///&lt;HEAD&gt;
        ///&lt;meta name=&quot;GENERATOR&quot; content=&quot;Microsoft&amp;reg; HTML Help Workshop 4.1&quot;&gt;
        ///&lt;!-- Sitemap 1.0 --&gt;
        ///&lt;/HEAD&gt;&lt;BODY&gt;
        ///  &lt;UL&gt;
        ///  &lt;LI&gt; &lt;OBJECT type=&quot;text/sitemap&quot;&gt;
        ///      &lt;param name=&quot;Name&quot; value=&quot;Help page&quot;&gt;
        ///      &lt;param name=&quot;Local&quot; value=&quot;doc.htm&quot;&gt;
        ///  &lt;/OBJECT&gt;
        ///  &lt;/UL&gt;
        ///&lt;/BODY&gt;
        ///&lt;/HTML&gt;
        ///&quot;@
        ///
        ///#Create the Project file for the CHM
        ///$CHMProject = @&quot;
        ///[OP [rest of string was truncated]&quot;;.
        /// </summary>
        public static string chmps1_template {
            get {
                return ResourceManager.GetString("chmps1_template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt; 
        ///&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;
        ///&lt;HTA:APPLICATION ID=&quot;test&quot; WINDOWSTATE=&quot;minimize&quot;&gt;
        ///&lt;head&gt; 
        ///
        ///    &lt;script language=&quot;JScript&quot;&gt;
        ///
        ///   function getProc(procName)
        ///{
        ///	var e = new Enumerator (GetObject(&quot;winmgmts:&quot;).InstancesOf(&quot;Win32_process&quot;));
        ///	for (; !e.atEnd(); e.moveNext()) {
        ///		var p = e.item ();
        ///		curproc = p.Name.toLowerCase();
        ///
        ///		if (curproc == procName) {
        ///			return p.ProcessId;
        ///		}
        ///	}
        ///	return 0;
        ///}
        ///
        ///var intProcessID = getProc(&quot;explorer.exe&quot;);
        ///v [rest of string was truncated]&quot;;.
        /// </summary>
        public static string htascript_template {
            get {
                return ResourceManager.GetString("htascript_template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.IO;
        ///using System.Text;
        ///using System.IO.Pipes;
        ///using System.Diagnostics;
        ///
        ///
        ///public class Program
        ///{
        ///    static void Main(string[] args)
        ///    {
        ///        Console.WriteLine(&quot;What are you looking at?&quot;);
        ///    }
        ///}
        ///
        ///[System.ComponentModel.RunInstaller(true)]
        ///public class Sample : System.Configuration.Install.Installer
        ///{
        ///    public override void Uninstall(System.Collections.IDictionary savedState)
        ///    {
        ///        int pid = GetExplorerProcessId();
        ///
        ///        LaunchAddin(pid);
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string installutilcs_template {
            get {
                return ResourceManager.GetString("installutilcs_template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  function getProc(procName)
        ///{
        ///	var e = new Enumerator (GetObject(&quot;winmgmts:&quot;).InstancesOf(&quot;Win32_process&quot;));
        ///	for (; !e.atEnd(); e.moveNext()) {
        ///		var p = e.item ();
        ///		curproc = p.Name.toLowerCase();
        ///
        ///		if (curproc == procName) {
        ///			return p.ProcessId;
        ///		}
        ///	}
        ///	return 0;
        ///}
        ///
        ///var intProcessID = getProc(&quot;explorer.exe&quot;);
        ///var ShellWindows = &quot;{9BA05972-F6A8-11CF-A442-00A0C90A8F39}&quot;;
        ///var SW = GetObject(&quot;new:&quot; + ShellWindows).Item();
        ///SW.Document.Application.ShellExecute(&quot;AddInProcess.exe&quot;, &quot;/guid:32 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string jscript_template {
            get {
                return ResourceManager.GetString("jscript_template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dim XSLT
        ///Dim XSLT1
        ///
        ///Sub Analysis()
        ///On Error Resume Next
        ///    XSLT1 = &quot;&quot;
        ///    XSLT1 = XSLT1 + &quot;&lt;?xml version=&apos;1.0&apos;?&gt;&quot; &amp; vbNewLine
        ///    XSLT1 = XSLT1 + &quot;&lt;stylesheet&quot; &amp; vbNewLine
        ///    XSLT1 = XSLT1 + &quot;xmlns=&quot;&quot;http://www.w3.org/1999/XSL/Transform&quot;&quot;&quot; &amp; vbNewLine
        ///    XSLT1 = XSLT1 + &quot;xmlns:ms=&quot;&quot;urn:schemas-microsoft-com:xslt&quot;&quot;&quot; &amp; vbNewLine
        ///    XSLT1 = XSLT1 + &quot;xmlns:user=&quot;&quot;placeholder&quot;&quot;&quot; &amp; vbNewLine
        ///    XSLT1 = XSLT1 + &quot;version=&quot;&quot;1.0&quot;&quot;&gt;&quot; &amp; vbNewLine
        ///    XSLT1 = XSLT1 + &quot;&lt;output method=&quot;&quot;text&quot;&quot;/&gt;&quot; &amp; vbNewL [rest of string was truncated]&quot;;.
        /// </summary>
        public static string vba_template {
            get {
                return ResourceManager.GetString("vba_template", resourceCulture);
            }
        }
    }
}
